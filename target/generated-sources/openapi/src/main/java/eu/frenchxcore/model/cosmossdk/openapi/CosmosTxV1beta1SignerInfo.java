/*
 * Cosmos SDK - gRPC Gateway docs
 * A REST interface for state queries
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.cosmossdk.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import eu.frenchxcore.model.cosmossdk.openapi.CosmosTxV1beta1ModeInfo;
import eu.frenchxcore.model.cosmossdk.openapi.InlineResponse200Accounts;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SignerInfo describes the public key and signing mode of a single top-level signer.
 */
@ApiModel(description = "SignerInfo describes the public key and signing mode of a single top-level signer.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-29T12:07:17.959489600+02:00[Europe/Paris]")
public class CosmosTxV1beta1SignerInfo {
  public static final String SERIALIZED_NAME_PUBLIC_KEY = "public_key";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY)
  private InlineResponse200Accounts publicKey;

  public static final String SERIALIZED_NAME_MODE_INFO = "mode_info";
  @SerializedName(SERIALIZED_NAME_MODE_INFO)
  private CosmosTxV1beta1ModeInfo modeInfo;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private String sequence;


  public CosmosTxV1beta1SignerInfo publicKey(InlineResponse200Accounts publicKey) {
    
    this.publicKey = publicKey;
    return this;
  }

   /**
   * Get publicKey
   * @return publicKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InlineResponse200Accounts getPublicKey() {
    return publicKey;
  }


  public void setPublicKey(InlineResponse200Accounts publicKey) {
    this.publicKey = publicKey;
  }


  public CosmosTxV1beta1SignerInfo modeInfo(CosmosTxV1beta1ModeInfo modeInfo) {
    
    this.modeInfo = modeInfo;
    return this;
  }

   /**
   * Get modeInfo
   * @return modeInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CosmosTxV1beta1ModeInfo getModeInfo() {
    return modeInfo;
  }


  public void setModeInfo(CosmosTxV1beta1ModeInfo modeInfo) {
    this.modeInfo = modeInfo;
  }


  public CosmosTxV1beta1SignerInfo sequence(String sequence) {
    
    this.sequence = sequence;
    return this;
  }

   /**
   * sequence is the sequence of the account, which describes the number of committed transactions signed by a given address. It is used to prevent replay attacks.
   * @return sequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "sequence is the sequence of the account, which describes the number of committed transactions signed by a given address. It is used to prevent replay attacks.")

  public String getSequence() {
    return sequence;
  }


  public void setSequence(String sequence) {
    this.sequence = sequence;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CosmosTxV1beta1SignerInfo cosmosTxV1beta1SignerInfo = (CosmosTxV1beta1SignerInfo) o;
    return Objects.equals(this.publicKey, cosmosTxV1beta1SignerInfo.publicKey) &&
        Objects.equals(this.modeInfo, cosmosTxV1beta1SignerInfo.modeInfo) &&
        Objects.equals(this.sequence, cosmosTxV1beta1SignerInfo.sequence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicKey, modeInfo, sequence);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CosmosTxV1beta1SignerInfo {\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    modeInfo: ").append(toIndentedString(modeInfo)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

