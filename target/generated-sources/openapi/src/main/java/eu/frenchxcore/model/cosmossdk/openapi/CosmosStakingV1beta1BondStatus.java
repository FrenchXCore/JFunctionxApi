/*
 * Cosmos SDK - gRPC Gateway docs
 * A REST interface for state queries
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.cosmossdk.openapi;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * BondStatus is the status of a validator.   - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.  - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.  - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.  - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
 */
@JsonAdapter(CosmosStakingV1beta1BondStatus.Adapter.class)
public enum CosmosStakingV1beta1BondStatus {
  
  UNSPECIFIED("BOND_STATUS_UNSPECIFIED"),
  
  UNBONDED("BOND_STATUS_UNBONDED"),
  
  UNBONDING("BOND_STATUS_UNBONDING"),
  
  BONDED("BOND_STATUS_BONDED");

  private String value;

  CosmosStakingV1beta1BondStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CosmosStakingV1beta1BondStatus fromValue(String value) {
    for (CosmosStakingV1beta1BondStatus b : CosmosStakingV1beta1BondStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CosmosStakingV1beta1BondStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final CosmosStakingV1beta1BondStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CosmosStakingV1beta1BondStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CosmosStakingV1beta1BondStatus.fromValue(value);
    }
  }
}

