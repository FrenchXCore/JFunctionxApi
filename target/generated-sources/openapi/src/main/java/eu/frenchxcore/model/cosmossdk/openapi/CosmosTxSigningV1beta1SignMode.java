/*
 * Cosmos SDK - gRPC Gateway docs
 * A REST interface for state queries
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.cosmossdk.openapi;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * SignMode represents a signing mode with its own security guarantees.   - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be rejected  - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is verified with raw bytes from Tx  - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some human-readable textual representation on top of the binary representation from SIGN_MODE_DIRECT  - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses Amino JSON and will be removed in the future
 */
@JsonAdapter(CosmosTxSigningV1beta1SignMode.Adapter.class)
public enum CosmosTxSigningV1beta1SignMode {
  
  UNSPECIFIED("SIGN_MODE_UNSPECIFIED"),
  
  DIRECT("SIGN_MODE_DIRECT"),
  
  TEXTUAL("SIGN_MODE_TEXTUAL"),
  
  LEGACY_AMINO_JSON("SIGN_MODE_LEGACY_AMINO_JSON");

  private String value;

  CosmosTxSigningV1beta1SignMode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CosmosTxSigningV1beta1SignMode fromValue(String value) {
    for (CosmosTxSigningV1beta1SignMode b : CosmosTxSigningV1beta1SignMode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CosmosTxSigningV1beta1SignMode> {
    @Override
    public void write(final JsonWriter jsonWriter, final CosmosTxSigningV1beta1SignMode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CosmosTxSigningV1beta1SignMode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CosmosTxSigningV1beta1SignMode.fromValue(value);
    }
  }
}

