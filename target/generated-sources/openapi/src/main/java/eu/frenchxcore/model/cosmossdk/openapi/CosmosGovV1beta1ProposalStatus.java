/*
 * Cosmos SDK - gRPC Gateway docs
 * A REST interface for state queries
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.cosmossdk.openapi;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * ProposalStatus enumerates the valid statuses of a proposal.   - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.  - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit period.  - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting period.  - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has passed.  - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has been rejected.  - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has failed.
 */
@JsonAdapter(CosmosGovV1beta1ProposalStatus.Adapter.class)
public enum CosmosGovV1beta1ProposalStatus {
  
  UNSPECIFIED("PROPOSAL_STATUS_UNSPECIFIED"),
  
  DEPOSIT_PERIOD("PROPOSAL_STATUS_DEPOSIT_PERIOD"),
  
  VOTING_PERIOD("PROPOSAL_STATUS_VOTING_PERIOD"),
  
  PASSED("PROPOSAL_STATUS_PASSED"),
  
  REJECTED("PROPOSAL_STATUS_REJECTED"),
  
  FAILED("PROPOSAL_STATUS_FAILED");

  private String value;

  CosmosGovV1beta1ProposalStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CosmosGovV1beta1ProposalStatus fromValue(String value) {
    for (CosmosGovV1beta1ProposalStatus b : CosmosGovV1beta1ProposalStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CosmosGovV1beta1ProposalStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final CosmosGovV1beta1ProposalStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CosmosGovV1beta1ProposalStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CosmosGovV1beta1ProposalStatus.fromValue(value);
    }
  }
}

