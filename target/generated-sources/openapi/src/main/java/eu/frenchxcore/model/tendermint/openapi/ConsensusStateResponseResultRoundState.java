/*
 * Tendermint RPC
 * Tendermint supports the following RPC protocols:  * URI over HTTP * JSON-RPC 2.0 over HTTP * JSON-RPC 2.0 over websockets (deprecated)  ## Configuration  RPC can be configured by tuning parameters under `[rpc]` table in the `$TMHOME/config/config.toml` file or by using the `--rpc.X` command-line flags.  Default rpc listen address is `tcp://0.0.0.0:26657`. To set another address, set the `laddr` config parameter to desired value. CORS (Cross-Origin Resource Sharing) can be enabled by setting `cors_allowed_origins`, `cors_allowed_methods`, `cors_allowed_headers` config parameters.  ## Arguments  Arguments which expect strings or byte arrays may be passed as quoted strings, like `\"abc\"` or as `0x`-prefixed strings, like `0x616263`.  ## URI/HTTP  A GET request with arguments encoded as query parameters:      curl localhost:26657/block?height=5  ## JSONRPC/HTTP  JSONRPC requests can be POST'd to the root RPC endpoint via HTTP.      curl --header \"Content-Type: application/json\" --request POST --data '{\"method\": \"block\", \"params\": [\"5\"], \"id\": 1}' localhost:26657  ## JSONRPC/websockets  In Tendermint v0.35 and earlier, JSONRPC requests can be also made via websocket.  The websocket interface is deprecated in Tendermint v0.36, and will be removed in v0.37.  The websocket endpoint is at `/websocket`, e.g. `localhost:26657/websocket`. The RPC methods for event subscription (`subscribe`, `unsubscribe`, and `unsubscribe_all`) are only available via websockets.  Example using https://github.com/hashrocket/ws:      ws ws://localhost:26657/websocket     > { \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event='NewBlock'\"], \"id\": 1 } 
 *
 * The version of the OpenAPI document: Master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.tendermint.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import eu.frenchxcore.model.tendermint.openapi.ConsensusStateResponseResultRoundStateHeightVoteSet;
import eu.frenchxcore.model.tendermint.openapi.ConsensusStateResponseResultRoundStateProposer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ConsensusStateResponseResultRoundState
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-29T09:44:07.698929500+02:00[Europe/Paris]")
public class ConsensusStateResponseResultRoundState {
  public static final String SERIALIZED_NAME_HEIGHT_ROUND_STEP = "height/round/step";
  @SerializedName(SERIALIZED_NAME_HEIGHT_ROUND_STEP)
  private String heightRoundStep;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_PROPOSAL_BLOCK_HASH = "proposal_block_hash";
  @SerializedName(SERIALIZED_NAME_PROPOSAL_BLOCK_HASH)
  private String proposalBlockHash;

  public static final String SERIALIZED_NAME_LOCKED_BLOCK_HASH = "locked_block_hash";
  @SerializedName(SERIALIZED_NAME_LOCKED_BLOCK_HASH)
  private String lockedBlockHash;

  public static final String SERIALIZED_NAME_VALID_BLOCK_HASH = "valid_block_hash";
  @SerializedName(SERIALIZED_NAME_VALID_BLOCK_HASH)
  private String validBlockHash;

  public static final String SERIALIZED_NAME_HEIGHT_VOTE_SET = "height_vote_set";
  @SerializedName(SERIALIZED_NAME_HEIGHT_VOTE_SET)
  private List<ConsensusStateResponseResultRoundStateHeightVoteSet> heightVoteSet = new ArrayList<ConsensusStateResponseResultRoundStateHeightVoteSet>();

  public static final String SERIALIZED_NAME_PROPOSER = "proposer";
  @SerializedName(SERIALIZED_NAME_PROPOSER)
  private ConsensusStateResponseResultRoundStateProposer proposer;


  public ConsensusStateResponseResultRoundState heightRoundStep(String heightRoundStep) {
    
    this.heightRoundStep = heightRoundStep;
    return this;
  }

   /**
   * Get heightRoundStep
   * @return heightRoundStep
  **/
  @ApiModelProperty(example = "1262197/0/8", required = true, value = "")

  public String getHeightRoundStep() {
    return heightRoundStep;
  }


  public void setHeightRoundStep(String heightRoundStep) {
    this.heightRoundStep = heightRoundStep;
  }


  public ConsensusStateResponseResultRoundState startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @ApiModelProperty(example = "2019-08-01T11:52:38.962730289Z", required = true, value = "")

  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public ConsensusStateResponseResultRoundState proposalBlockHash(String proposalBlockHash) {
    
    this.proposalBlockHash = proposalBlockHash;
    return this;
  }

   /**
   * Get proposalBlockHash
   * @return proposalBlockHash
  **/
  @ApiModelProperty(example = "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009", required = true, value = "")

  public String getProposalBlockHash() {
    return proposalBlockHash;
  }


  public void setProposalBlockHash(String proposalBlockHash) {
    this.proposalBlockHash = proposalBlockHash;
  }


  public ConsensusStateResponseResultRoundState lockedBlockHash(String lockedBlockHash) {
    
    this.lockedBlockHash = lockedBlockHash;
    return this;
  }

   /**
   * Get lockedBlockHash
   * @return lockedBlockHash
  **/
  @ApiModelProperty(example = "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009", required = true, value = "")

  public String getLockedBlockHash() {
    return lockedBlockHash;
  }


  public void setLockedBlockHash(String lockedBlockHash) {
    this.lockedBlockHash = lockedBlockHash;
  }


  public ConsensusStateResponseResultRoundState validBlockHash(String validBlockHash) {
    
    this.validBlockHash = validBlockHash;
    return this;
  }

   /**
   * Get validBlockHash
   * @return validBlockHash
  **/
  @ApiModelProperty(example = "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009", required = true, value = "")

  public String getValidBlockHash() {
    return validBlockHash;
  }


  public void setValidBlockHash(String validBlockHash) {
    this.validBlockHash = validBlockHash;
  }


  public ConsensusStateResponseResultRoundState heightVoteSet(List<ConsensusStateResponseResultRoundStateHeightVoteSet> heightVoteSet) {
    
    this.heightVoteSet = heightVoteSet;
    return this;
  }

  public ConsensusStateResponseResultRoundState addHeightVoteSetItem(ConsensusStateResponseResultRoundStateHeightVoteSet heightVoteSetItem) {
    this.heightVoteSet.add(heightVoteSetItem);
    return this;
  }

   /**
   * Get heightVoteSet
   * @return heightVoteSet
  **/
  @ApiModelProperty(required = true, value = "")

  public List<ConsensusStateResponseResultRoundStateHeightVoteSet> getHeightVoteSet() {
    return heightVoteSet;
  }


  public void setHeightVoteSet(List<ConsensusStateResponseResultRoundStateHeightVoteSet> heightVoteSet) {
    this.heightVoteSet = heightVoteSet;
  }


  public ConsensusStateResponseResultRoundState proposer(ConsensusStateResponseResultRoundStateProposer proposer) {
    
    this.proposer = proposer;
    return this;
  }

   /**
   * Get proposer
   * @return proposer
  **/
  @ApiModelProperty(required = true, value = "")

  public ConsensusStateResponseResultRoundStateProposer getProposer() {
    return proposer;
  }


  public void setProposer(ConsensusStateResponseResultRoundStateProposer proposer) {
    this.proposer = proposer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsensusStateResponseResultRoundState consensusStateResponseResultRoundState = (ConsensusStateResponseResultRoundState) o;
    return Objects.equals(this.heightRoundStep, consensusStateResponseResultRoundState.heightRoundStep) &&
        Objects.equals(this.startTime, consensusStateResponseResultRoundState.startTime) &&
        Objects.equals(this.proposalBlockHash, consensusStateResponseResultRoundState.proposalBlockHash) &&
        Objects.equals(this.lockedBlockHash, consensusStateResponseResultRoundState.lockedBlockHash) &&
        Objects.equals(this.validBlockHash, consensusStateResponseResultRoundState.validBlockHash) &&
        Objects.equals(this.heightVoteSet, consensusStateResponseResultRoundState.heightVoteSet) &&
        Objects.equals(this.proposer, consensusStateResponseResultRoundState.proposer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(heightRoundStep, startTime, proposalBlockHash, lockedBlockHash, validBlockHash, heightVoteSet, proposer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsensusStateResponseResultRoundState {\n");
    sb.append("    heightRoundStep: ").append(toIndentedString(heightRoundStep)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    proposalBlockHash: ").append(toIndentedString(proposalBlockHash)).append("\n");
    sb.append("    lockedBlockHash: ").append(toIndentedString(lockedBlockHash)).append("\n");
    sb.append("    validBlockHash: ").append(toIndentedString(validBlockHash)).append("\n");
    sb.append("    heightVoteSet: ").append(toIndentedString(heightVoteSet)).append("\n");
    sb.append("    proposer: ").append(toIndentedString(proposer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

