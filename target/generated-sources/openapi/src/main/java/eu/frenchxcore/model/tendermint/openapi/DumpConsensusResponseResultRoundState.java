/*
 * Tendermint RPC
 * Tendermint supports the following RPC protocols:  * URI over HTTP * JSON-RPC 2.0 over HTTP * JSON-RPC 2.0 over websockets (deprecated)  ## Configuration  RPC can be configured by tuning parameters under `[rpc]` table in the `$TMHOME/config/config.toml` file or by using the `--rpc.X` command-line flags.  Default rpc listen address is `tcp://0.0.0.0:26657`. To set another address, set the `laddr` config parameter to desired value. CORS (Cross-Origin Resource Sharing) can be enabled by setting `cors_allowed_origins`, `cors_allowed_methods`, `cors_allowed_headers` config parameters.  ## Arguments  Arguments which expect strings or byte arrays may be passed as quoted strings, like `\"abc\"` or as `0x`-prefixed strings, like `0x616263`.  ## URI/HTTP  A GET request with arguments encoded as query parameters:      curl localhost:26657/block?height=5  ## JSONRPC/HTTP  JSONRPC requests can be POST'd to the root RPC endpoint via HTTP.      curl --header \"Content-Type: application/json\" --request POST --data '{\"method\": \"block\", \"params\": [\"5\"], \"id\": 1}' localhost:26657  ## JSONRPC/websockets  In Tendermint v0.35 and earlier, JSONRPC requests can be also made via websocket.  The websocket interface is deprecated in Tendermint v0.36, and will be removed in v0.37.  The websocket endpoint is at `/websocket`, e.g. `localhost:26657/websocket`. The RPC methods for event subscription (`subscribe`, `unsubscribe`, and `unsubscribe_all`) are only available via websockets.  Example using https://github.com/hashrocket/ws:      ws ws://localhost:26657/websocket     > { \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event='NewBlock'\"], \"id\": 1 } 
 *
 * The version of the OpenAPI document: Master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.tendermint.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import eu.frenchxcore.model.tendermint.openapi.DumpConsensusResponseResultRoundStateLastCommit;
import eu.frenchxcore.model.tendermint.openapi.DumpConsensusResponseResultRoundStateValidators;
import eu.frenchxcore.model.tendermint.openapi.DumpConsensusResponseResultRoundStateVotes;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DumpConsensusResponseResultRoundState
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-16T07:33:27.992268300+02:00[Europe/Paris]")
public class DumpConsensusResponseResultRoundState {
  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private String height;

  public static final String SERIALIZED_NAME_ROUND = "round";
  @SerializedName(SERIALIZED_NAME_ROUND)
  private Integer round;

  public static final String SERIALIZED_NAME_STEP = "step";
  @SerializedName(SERIALIZED_NAME_STEP)
  private Integer step;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_COMMIT_TIME = "commit_time";
  @SerializedName(SERIALIZED_NAME_COMMIT_TIME)
  private String commitTime;

  public static final String SERIALIZED_NAME_VALIDATORS = "validators";
  @SerializedName(SERIALIZED_NAME_VALIDATORS)
  private DumpConsensusResponseResultRoundStateValidators validators;

  public static final String SERIALIZED_NAME_LOCKED_ROUND = "locked_round";
  @SerializedName(SERIALIZED_NAME_LOCKED_ROUND)
  private Integer lockedRound;

  public static final String SERIALIZED_NAME_VALID_ROUND = "valid_round";
  @SerializedName(SERIALIZED_NAME_VALID_ROUND)
  private String validRound;

  public static final String SERIALIZED_NAME_VOTES = "votes";
  @SerializedName(SERIALIZED_NAME_VOTES)
  private List<DumpConsensusResponseResultRoundStateVotes> votes = new ArrayList<DumpConsensusResponseResultRoundStateVotes>();

  public static final String SERIALIZED_NAME_COMMIT_ROUND = "commit_round";
  @SerializedName(SERIALIZED_NAME_COMMIT_ROUND)
  private Integer commitRound;

  public static final String SERIALIZED_NAME_LAST_COMMIT = "last_commit";
  @SerializedName(SERIALIZED_NAME_LAST_COMMIT)
  private DumpConsensusResponseResultRoundStateLastCommit lastCommit;

  public static final String SERIALIZED_NAME_LAST_VALIDATORS = "last_validators";
  @SerializedName(SERIALIZED_NAME_LAST_VALIDATORS)
  private DumpConsensusResponseResultRoundStateValidators lastValidators;

  public static final String SERIALIZED_NAME_TRIGGERED_TIMEOUT_PRECOMMIT = "triggered_timeout_precommit";
  @SerializedName(SERIALIZED_NAME_TRIGGERED_TIMEOUT_PRECOMMIT)
  private Boolean triggeredTimeoutPrecommit;


  public DumpConsensusResponseResultRoundState height(String height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(example = "1311801", required = true, value = "")

  public String getHeight() {
    return height;
  }


  public void setHeight(String height) {
    this.height = height;
  }


  public DumpConsensusResponseResultRoundState round(Integer round) {
    
    this.round = round;
    return this;
  }

   /**
   * Get round
   * @return round
  **/
  @ApiModelProperty(example = "0", required = true, value = "")

  public Integer getRound() {
    return round;
  }


  public void setRound(Integer round) {
    this.round = round;
  }


  public DumpConsensusResponseResultRoundState step(Integer step) {
    
    this.step = step;
    return this;
  }

   /**
   * Get step
   * @return step
  **/
  @ApiModelProperty(example = "3", required = true, value = "")

  public Integer getStep() {
    return step;
  }


  public void setStep(Integer step) {
    this.step = step;
  }


  public DumpConsensusResponseResultRoundState startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @ApiModelProperty(example = "2019-08-05T11:28:49.064658805Z", required = true, value = "")

  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public DumpConsensusResponseResultRoundState commitTime(String commitTime) {
    
    this.commitTime = commitTime;
    return this;
  }

   /**
   * Get commitTime
   * @return commitTime
  **/
  @ApiModelProperty(example = "2019-08-05T11:28:44.064658805Z", required = true, value = "")

  public String getCommitTime() {
    return commitTime;
  }


  public void setCommitTime(String commitTime) {
    this.commitTime = commitTime;
  }


  public DumpConsensusResponseResultRoundState validators(DumpConsensusResponseResultRoundStateValidators validators) {
    
    this.validators = validators;
    return this;
  }

   /**
   * Get validators
   * @return validators
  **/
  @ApiModelProperty(required = true, value = "")

  public DumpConsensusResponseResultRoundStateValidators getValidators() {
    return validators;
  }


  public void setValidators(DumpConsensusResponseResultRoundStateValidators validators) {
    this.validators = validators;
  }


  public DumpConsensusResponseResultRoundState lockedRound(Integer lockedRound) {
    
    this.lockedRound = lockedRound;
    return this;
  }

   /**
   * Get lockedRound
   * @return lockedRound
  **/
  @ApiModelProperty(example = "-1", required = true, value = "")

  public Integer getLockedRound() {
    return lockedRound;
  }


  public void setLockedRound(Integer lockedRound) {
    this.lockedRound = lockedRound;
  }


  public DumpConsensusResponseResultRoundState validRound(String validRound) {
    
    this.validRound = validRound;
    return this;
  }

   /**
   * Get validRound
   * @return validRound
  **/
  @ApiModelProperty(example = "-1", required = true, value = "")

  public String getValidRound() {
    return validRound;
  }


  public void setValidRound(String validRound) {
    this.validRound = validRound;
  }


  public DumpConsensusResponseResultRoundState votes(List<DumpConsensusResponseResultRoundStateVotes> votes) {
    
    this.votes = votes;
    return this;
  }

  public DumpConsensusResponseResultRoundState addVotesItem(DumpConsensusResponseResultRoundStateVotes votesItem) {
    this.votes.add(votesItem);
    return this;
  }

   /**
   * Get votes
   * @return votes
  **/
  @ApiModelProperty(required = true, value = "")

  public List<DumpConsensusResponseResultRoundStateVotes> getVotes() {
    return votes;
  }


  public void setVotes(List<DumpConsensusResponseResultRoundStateVotes> votes) {
    this.votes = votes;
  }


  public DumpConsensusResponseResultRoundState commitRound(Integer commitRound) {
    
    this.commitRound = commitRound;
    return this;
  }

   /**
   * Get commitRound
   * @return commitRound
  **/
  @ApiModelProperty(example = "-1", required = true, value = "")

  public Integer getCommitRound() {
    return commitRound;
  }


  public void setCommitRound(Integer commitRound) {
    this.commitRound = commitRound;
  }


  public DumpConsensusResponseResultRoundState lastCommit(DumpConsensusResponseResultRoundStateLastCommit lastCommit) {
    
    this.lastCommit = lastCommit;
    return this;
  }

   /**
   * Get lastCommit
   * @return lastCommit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public DumpConsensusResponseResultRoundStateLastCommit getLastCommit() {
    return lastCommit;
  }


  public void setLastCommit(DumpConsensusResponseResultRoundStateLastCommit lastCommit) {
    this.lastCommit = lastCommit;
  }


  public DumpConsensusResponseResultRoundState lastValidators(DumpConsensusResponseResultRoundStateValidators lastValidators) {
    
    this.lastValidators = lastValidators;
    return this;
  }

   /**
   * Get lastValidators
   * @return lastValidators
  **/
  @ApiModelProperty(required = true, value = "")

  public DumpConsensusResponseResultRoundStateValidators getLastValidators() {
    return lastValidators;
  }


  public void setLastValidators(DumpConsensusResponseResultRoundStateValidators lastValidators) {
    this.lastValidators = lastValidators;
  }


  public DumpConsensusResponseResultRoundState triggeredTimeoutPrecommit(Boolean triggeredTimeoutPrecommit) {
    
    this.triggeredTimeoutPrecommit = triggeredTimeoutPrecommit;
    return this;
  }

   /**
   * Get triggeredTimeoutPrecommit
   * @return triggeredTimeoutPrecommit
  **/
  @ApiModelProperty(example = "false", required = true, value = "")

  public Boolean getTriggeredTimeoutPrecommit() {
    return triggeredTimeoutPrecommit;
  }


  public void setTriggeredTimeoutPrecommit(Boolean triggeredTimeoutPrecommit) {
    this.triggeredTimeoutPrecommit = triggeredTimeoutPrecommit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DumpConsensusResponseResultRoundState dumpConsensusResponseResultRoundState = (DumpConsensusResponseResultRoundState) o;
    return Objects.equals(this.height, dumpConsensusResponseResultRoundState.height) &&
        Objects.equals(this.round, dumpConsensusResponseResultRoundState.round) &&
        Objects.equals(this.step, dumpConsensusResponseResultRoundState.step) &&
        Objects.equals(this.startTime, dumpConsensusResponseResultRoundState.startTime) &&
        Objects.equals(this.commitTime, dumpConsensusResponseResultRoundState.commitTime) &&
        Objects.equals(this.validators, dumpConsensusResponseResultRoundState.validators) &&
        Objects.equals(this.lockedRound, dumpConsensusResponseResultRoundState.lockedRound) &&
        Objects.equals(this.validRound, dumpConsensusResponseResultRoundState.validRound) &&
        Objects.equals(this.votes, dumpConsensusResponseResultRoundState.votes) &&
        Objects.equals(this.commitRound, dumpConsensusResponseResultRoundState.commitRound) &&
        Objects.equals(this.lastCommit, dumpConsensusResponseResultRoundState.lastCommit) &&
        Objects.equals(this.lastValidators, dumpConsensusResponseResultRoundState.lastValidators) &&
        Objects.equals(this.triggeredTimeoutPrecommit, dumpConsensusResponseResultRoundState.triggeredTimeoutPrecommit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(height, round, step, startTime, commitTime, validators, lockedRound, validRound, votes, commitRound, lastCommit, lastValidators, triggeredTimeoutPrecommit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DumpConsensusResponseResultRoundState {\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    round: ").append(toIndentedString(round)).append("\n");
    sb.append("    step: ").append(toIndentedString(step)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    commitTime: ").append(toIndentedString(commitTime)).append("\n");
    sb.append("    validators: ").append(toIndentedString(validators)).append("\n");
    sb.append("    lockedRound: ").append(toIndentedString(lockedRound)).append("\n");
    sb.append("    validRound: ").append(toIndentedString(validRound)).append("\n");
    sb.append("    votes: ").append(toIndentedString(votes)).append("\n");
    sb.append("    commitRound: ").append(toIndentedString(commitRound)).append("\n");
    sb.append("    lastCommit: ").append(toIndentedString(lastCommit)).append("\n");
    sb.append("    lastValidators: ").append(toIndentedString(lastValidators)).append("\n");
    sb.append("    triggeredTimeoutPrecommit: ").append(toIndentedString(triggeredTimeoutPrecommit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

