/*
 * Tendermint RPC
 * Tendermint supports the following RPC protocols:  * URI over HTTP * JSON-RPC 2.0 over HTTP * JSON-RPC 2.0 over websockets (deprecated)  ## Configuration  RPC can be configured by tuning parameters under `[rpc]` table in the `$TMHOME/config/config.toml` file or by using the `--rpc.X` command-line flags.  Default rpc listen address is `tcp://0.0.0.0:26657`. To set another address, set the `laddr` config parameter to desired value. CORS (Cross-Origin Resource Sharing) can be enabled by setting `cors_allowed_origins`, `cors_allowed_methods`, `cors_allowed_headers` config parameters.  ## Arguments  Arguments which expect strings or byte arrays may be passed as quoted strings, like `\"abc\"` or as `0x`-prefixed strings, like `0x616263`.  ## URI/HTTP  A GET request with arguments encoded as query parameters:      curl localhost:26657/block?height=5  ## JSONRPC/HTTP  JSONRPC requests can be POST'd to the root RPC endpoint via HTTP.      curl --header \"Content-Type: application/json\" --request POST --data '{\"method\": \"block\", \"params\": [\"5\"], \"id\": 1}' localhost:26657  ## JSONRPC/websockets  In Tendermint v0.35 and earlier, JSONRPC requests can be also made via websocket.  The websocket interface is deprecated in Tendermint v0.36, and will be removed in v0.37.  The websocket endpoint is at `/websocket`, e.g. `localhost:26657/websocket`. The RPC methods for event subscription (`subscribe`, `unsubscribe`, and `unsubscribe_all`) are only available via websockets.  Example using https://github.com/hashrocket/ws:      ws ws://localhost:26657/websocket     > { \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event='NewBlock'\"], \"id\": 1 } 
 *
 * The version of the OpenAPI document: Master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.tendermint.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DumpConsensusResponseResultRoundStateVotes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-29T12:07:09.914489900+02:00[Europe/Paris]")
public class DumpConsensusResponseResultRoundStateVotes {
  public static final String SERIALIZED_NAME_ROUND = "round";
  @SerializedName(SERIALIZED_NAME_ROUND)
  private String round;

  public static final String SERIALIZED_NAME_PREVOTES = "prevotes";
  @SerializedName(SERIALIZED_NAME_PREVOTES)
  private List<String> prevotes = null;

  public static final String SERIALIZED_NAME_PREVOTES_BIT_ARRAY = "prevotes_bit_array";
  @SerializedName(SERIALIZED_NAME_PREVOTES_BIT_ARRAY)
  private String prevotesBitArray;

  public static final String SERIALIZED_NAME_PRECOMMITS = "precommits";
  @SerializedName(SERIALIZED_NAME_PRECOMMITS)
  private List<String> precommits = null;

  public static final String SERIALIZED_NAME_PRECOMMITS_BIT_ARRAY = "precommits_bit_array";
  @SerializedName(SERIALIZED_NAME_PRECOMMITS_BIT_ARRAY)
  private String precommitsBitArray;


  public DumpConsensusResponseResultRoundStateVotes round(String round) {
    
    this.round = round;
    return this;
  }

   /**
   * Get round
   * @return round
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public String getRound() {
    return round;
  }


  public void setRound(String round) {
    this.round = round;
  }


  public DumpConsensusResponseResultRoundStateVotes prevotes(List<String> prevotes) {
    
    this.prevotes = prevotes;
    return this;
  }

  public DumpConsensusResponseResultRoundStateVotes addPrevotesItem(String prevotesItem) {
    if (this.prevotes == null) {
      this.prevotes = new ArrayList<String>();
    }
    this.prevotes.add(prevotesItem);
    return this;
  }

   /**
   * Get prevotes
   * @return prevotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"nil-Vote\",\"Vote{19:46A3F8B8393B 1311801/00/1(Prevote) 000000000000 64CE682305CB @ 2019-08-05T11:28:47.374703444Z}\"]", value = "")

  public List<String> getPrevotes() {
    return prevotes;
  }


  public void setPrevotes(List<String> prevotes) {
    this.prevotes = prevotes;
  }


  public DumpConsensusResponseResultRoundStateVotes prevotesBitArray(String prevotesBitArray) {
    
    this.prevotesBitArray = prevotesBitArray;
    return this;
  }

   /**
   * Get prevotesBitArray
   * @return prevotesBitArray
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BA{100:___________________x________________________________________________________________________________} 209706/170220253 = 0.00", value = "")

  public String getPrevotesBitArray() {
    return prevotesBitArray;
  }


  public void setPrevotesBitArray(String prevotesBitArray) {
    this.prevotesBitArray = prevotesBitArray;
  }


  public DumpConsensusResponseResultRoundStateVotes precommits(List<String> precommits) {
    
    this.precommits = precommits;
    return this;
  }

  public DumpConsensusResponseResultRoundStateVotes addPrecommitsItem(String precommitsItem) {
    if (this.precommits == null) {
      this.precommits = new ArrayList<String>();
    }
    this.precommits.add(precommitsItem);
    return this;
  }

   /**
   * Get precommits
   * @return precommits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"nil-Vote\"]", value = "")

  public List<String> getPrecommits() {
    return precommits;
  }


  public void setPrecommits(List<String> precommits) {
    this.precommits = precommits;
  }


  public DumpConsensusResponseResultRoundStateVotes precommitsBitArray(String precommitsBitArray) {
    
    this.precommitsBitArray = precommitsBitArray;
    return this;
  }

   /**
   * Get precommitsBitArray
   * @return precommitsBitArray
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BA{100:____________________________________________________________________________________________________} 0/170220253 = 0.00", value = "")

  public String getPrecommitsBitArray() {
    return precommitsBitArray;
  }


  public void setPrecommitsBitArray(String precommitsBitArray) {
    this.precommitsBitArray = precommitsBitArray;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DumpConsensusResponseResultRoundStateVotes dumpConsensusResponseResultRoundStateVotes = (DumpConsensusResponseResultRoundStateVotes) o;
    return Objects.equals(this.round, dumpConsensusResponseResultRoundStateVotes.round) &&
        Objects.equals(this.prevotes, dumpConsensusResponseResultRoundStateVotes.prevotes) &&
        Objects.equals(this.prevotesBitArray, dumpConsensusResponseResultRoundStateVotes.prevotesBitArray) &&
        Objects.equals(this.precommits, dumpConsensusResponseResultRoundStateVotes.precommits) &&
        Objects.equals(this.precommitsBitArray, dumpConsensusResponseResultRoundStateVotes.precommitsBitArray);
  }

  @Override
  public int hashCode() {
    return Objects.hash(round, prevotes, prevotesBitArray, precommits, precommitsBitArray);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DumpConsensusResponseResultRoundStateVotes {\n");
    sb.append("    round: ").append(toIndentedString(round)).append("\n");
    sb.append("    prevotes: ").append(toIndentedString(prevotes)).append("\n");
    sb.append("    prevotesBitArray: ").append(toIndentedString(prevotesBitArray)).append("\n");
    sb.append("    precommits: ").append(toIndentedString(precommits)).append("\n");
    sb.append("    precommitsBitArray: ").append(toIndentedString(precommitsBitArray)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

