/*
 * Cosmos SDK - gRPC Gateway docs
 * A REST interface for state queries
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.cosmossdk.openapi;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * VoteOption enumerates the valid vote options for a given governance proposal.   - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.  - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.  - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.  - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.  - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
 */
@JsonAdapter(CosmosGovV1beta1VoteOption.Adapter.class)
public enum CosmosGovV1beta1VoteOption {
  
  UNSPECIFIED("VOTE_OPTION_UNSPECIFIED"),
  
  YES("VOTE_OPTION_YES"),
  
  ABSTAIN("VOTE_OPTION_ABSTAIN"),
  
  NO("VOTE_OPTION_NO"),
  
  NO_WITH_VETO("VOTE_OPTION_NO_WITH_VETO");

  private String value;

  CosmosGovV1beta1VoteOption(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CosmosGovV1beta1VoteOption fromValue(String value) {
    for (CosmosGovV1beta1VoteOption b : CosmosGovV1beta1VoteOption.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CosmosGovV1beta1VoteOption> {
    @Override
    public void write(final JsonWriter jsonWriter, final CosmosGovV1beta1VoteOption enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CosmosGovV1beta1VoteOption read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CosmosGovV1beta1VoteOption.fromValue(value);
    }
  }
}

