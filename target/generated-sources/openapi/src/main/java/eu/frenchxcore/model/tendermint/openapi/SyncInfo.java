/*
 * Tendermint RPC
 * Tendermint supports the following RPC protocols:  * URI over HTTP * JSON-RPC 2.0 over HTTP * JSON-RPC 2.0 over websockets (deprecated)  ## Configuration  RPC can be configured by tuning parameters under `[rpc]` table in the `$TMHOME/config/config.toml` file or by using the `--rpc.X` command-line flags.  Default rpc listen address is `tcp://0.0.0.0:26657`. To set another address, set the `laddr` config parameter to desired value. CORS (Cross-Origin Resource Sharing) can be enabled by setting `cors_allowed_origins`, `cors_allowed_methods`, `cors_allowed_headers` config parameters.  ## Arguments  Arguments which expect strings or byte arrays may be passed as quoted strings, like `\"abc\"` or as `0x`-prefixed strings, like `0x616263`.  ## URI/HTTP  A GET request with arguments encoded as query parameters:      curl localhost:26657/block?height=5  ## JSONRPC/HTTP  JSONRPC requests can be POST'd to the root RPC endpoint via HTTP.      curl --header \"Content-Type: application/json\" --request POST --data '{\"method\": \"block\", \"params\": [\"5\"], \"id\": 1}' localhost:26657  ## JSONRPC/websockets  In Tendermint v0.35 and earlier, JSONRPC requests can be also made via websocket.  The websocket interface is deprecated in Tendermint v0.36, and will be removed in v0.37.  The websocket endpoint is at `/websocket`, e.g. `localhost:26657/websocket`. The RPC methods for event subscription (`subscribe`, `unsubscribe`, and `unsubscribe_all`) are only available via websockets.  Example using https://github.com/hashrocket/ws:      ws ws://localhost:26657/websocket     > { \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event='NewBlock'\"], \"id\": 1 } 
 *
 * The version of the OpenAPI document: Master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.frenchxcore.model.tendermint.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SyncInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-16T07:33:27.992268300+02:00[Europe/Paris]")
public class SyncInfo {
  public static final String SERIALIZED_NAME_LATEST_BLOCK_HASH = "latest_block_hash";
  @SerializedName(SERIALIZED_NAME_LATEST_BLOCK_HASH)
  private String latestBlockHash;

  public static final String SERIALIZED_NAME_LATEST_APP_HASH = "latest_app_hash";
  @SerializedName(SERIALIZED_NAME_LATEST_APP_HASH)
  private String latestAppHash;

  public static final String SERIALIZED_NAME_LATEST_BLOCK_HEIGHT = "latest_block_height";
  @SerializedName(SERIALIZED_NAME_LATEST_BLOCK_HEIGHT)
  private String latestBlockHeight;

  public static final String SERIALIZED_NAME_LATEST_BLOCK_TIME = "latest_block_time";
  @SerializedName(SERIALIZED_NAME_LATEST_BLOCK_TIME)
  private String latestBlockTime;

  public static final String SERIALIZED_NAME_EARLIEST_BLOCK_HASH = "earliest_block_hash";
  @SerializedName(SERIALIZED_NAME_EARLIEST_BLOCK_HASH)
  private String earliestBlockHash;

  public static final String SERIALIZED_NAME_EARLIEST_APP_HASH = "earliest_app_hash";
  @SerializedName(SERIALIZED_NAME_EARLIEST_APP_HASH)
  private String earliestAppHash;

  public static final String SERIALIZED_NAME_EARLIEST_BLOCK_HEIGHT = "earliest_block_height";
  @SerializedName(SERIALIZED_NAME_EARLIEST_BLOCK_HEIGHT)
  private String earliestBlockHeight;

  public static final String SERIALIZED_NAME_EARLIEST_BLOCK_TIME = "earliest_block_time";
  @SerializedName(SERIALIZED_NAME_EARLIEST_BLOCK_TIME)
  private String earliestBlockTime;

  public static final String SERIALIZED_NAME_MAX_PEER_BLOCK_HEIGHT = "max_peer_block_height";
  @SerializedName(SERIALIZED_NAME_MAX_PEER_BLOCK_HEIGHT)
  private String maxPeerBlockHeight;

  public static final String SERIALIZED_NAME_CATCHING_UP = "catching_up";
  @SerializedName(SERIALIZED_NAME_CATCHING_UP)
  private Boolean catchingUp;

  public static final String SERIALIZED_NAME_TOTAL_SYNCED_TIME = "total_synced_time";
  @SerializedName(SERIALIZED_NAME_TOTAL_SYNCED_TIME)
  private String totalSyncedTime;

  public static final String SERIALIZED_NAME_REMAINING_TIME = "remaining_time";
  @SerializedName(SERIALIZED_NAME_REMAINING_TIME)
  private String remainingTime;

  public static final String SERIALIZED_NAME_TOTAL_SNAPSHOTS = "total_snapshots";
  @SerializedName(SERIALIZED_NAME_TOTAL_SNAPSHOTS)
  private String totalSnapshots;

  public static final String SERIALIZED_NAME_CHUNK_PROCESS_AVG_TIME = "chunk_process_avg_time";
  @SerializedName(SERIALIZED_NAME_CHUNK_PROCESS_AVG_TIME)
  private String chunkProcessAvgTime;

  public static final String SERIALIZED_NAME_SNAPSHOT_HEIGHT = "snapshot_height";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_HEIGHT)
  private String snapshotHeight;

  public static final String SERIALIZED_NAME_SNAPSHOT_CHUNKS_COUNT = "snapshot_chunks_count";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_CHUNKS_COUNT)
  private String snapshotChunksCount;

  public static final String SERIALIZED_NAME_SNAPSHOT_CHUNKS_TOTAL = "snapshot_chunks_total";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_CHUNKS_TOTAL)
  private String snapshotChunksTotal;

  public static final String SERIALIZED_NAME_BACKFILLED_BLOCKS = "backfilled_blocks";
  @SerializedName(SERIALIZED_NAME_BACKFILLED_BLOCKS)
  private String backfilledBlocks;

  public static final String SERIALIZED_NAME_BACKFILL_BLOCKS_TOTAL = "backfill_blocks_total";
  @SerializedName(SERIALIZED_NAME_BACKFILL_BLOCKS_TOTAL)
  private String backfillBlocksTotal;


  public SyncInfo latestBlockHash(String latestBlockHash) {
    
    this.latestBlockHash = latestBlockHash;
    return this;
  }

   /**
   * Get latestBlockHash
   * @return latestBlockHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "790BA84C3545FCCC49A5C629CEE6EA58A6E875C3862175BDC11EE7AF54703501", value = "")

  public String getLatestBlockHash() {
    return latestBlockHash;
  }


  public void setLatestBlockHash(String latestBlockHash) {
    this.latestBlockHash = latestBlockHash;
  }


  public SyncInfo latestAppHash(String latestAppHash) {
    
    this.latestAppHash = latestAppHash;
    return this;
  }

   /**
   * Get latestAppHash
   * @return latestAppHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C9AEBB441B787D9F1D846DE51F3826F4FD386108B59B08239653ABF59455C3F8", value = "")

  public String getLatestAppHash() {
    return latestAppHash;
  }


  public void setLatestAppHash(String latestAppHash) {
    this.latestAppHash = latestAppHash;
  }


  public SyncInfo latestBlockHeight(String latestBlockHeight) {
    
    this.latestBlockHeight = latestBlockHeight;
    return this;
  }

   /**
   * Get latestBlockHeight
   * @return latestBlockHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1262196", value = "")

  public String getLatestBlockHeight() {
    return latestBlockHeight;
  }


  public void setLatestBlockHeight(String latestBlockHeight) {
    this.latestBlockHeight = latestBlockHeight;
  }


  public SyncInfo latestBlockTime(String latestBlockTime) {
    
    this.latestBlockTime = latestBlockTime;
    return this;
  }

   /**
   * Get latestBlockTime
   * @return latestBlockTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-08-01T11:52:22.818762194Z", value = "")

  public String getLatestBlockTime() {
    return latestBlockTime;
  }


  public void setLatestBlockTime(String latestBlockTime) {
    this.latestBlockTime = latestBlockTime;
  }


  public SyncInfo earliestBlockHash(String earliestBlockHash) {
    
    this.earliestBlockHash = earliestBlockHash;
    return this;
  }

   /**
   * Get earliestBlockHash
   * @return earliestBlockHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "790BA84C3545FCCC49A5C629CEE6EA58A6E875C3862175BDC11EE7AF54703501", value = "")

  public String getEarliestBlockHash() {
    return earliestBlockHash;
  }


  public void setEarliestBlockHash(String earliestBlockHash) {
    this.earliestBlockHash = earliestBlockHash;
  }


  public SyncInfo earliestAppHash(String earliestAppHash) {
    
    this.earliestAppHash = earliestAppHash;
    return this;
  }

   /**
   * Get earliestAppHash
   * @return earliestAppHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "C9AEBB441B787D9F1D846DE51F3826F4FD386108B59B08239653ABF59455C3F8", value = "")

  public String getEarliestAppHash() {
    return earliestAppHash;
  }


  public void setEarliestAppHash(String earliestAppHash) {
    this.earliestAppHash = earliestAppHash;
  }


  public SyncInfo earliestBlockHeight(String earliestBlockHeight) {
    
    this.earliestBlockHeight = earliestBlockHeight;
    return this;
  }

   /**
   * Get earliestBlockHeight
   * @return earliestBlockHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1262196", value = "")

  public String getEarliestBlockHeight() {
    return earliestBlockHeight;
  }


  public void setEarliestBlockHeight(String earliestBlockHeight) {
    this.earliestBlockHeight = earliestBlockHeight;
  }


  public SyncInfo earliestBlockTime(String earliestBlockTime) {
    
    this.earliestBlockTime = earliestBlockTime;
    return this;
  }

   /**
   * Get earliestBlockTime
   * @return earliestBlockTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-08-01T11:52:22.818762194Z", value = "")

  public String getEarliestBlockTime() {
    return earliestBlockTime;
  }


  public void setEarliestBlockTime(String earliestBlockTime) {
    this.earliestBlockTime = earliestBlockTime;
  }


  public SyncInfo maxPeerBlockHeight(String maxPeerBlockHeight) {
    
    this.maxPeerBlockHeight = maxPeerBlockHeight;
    return this;
  }

   /**
   * Get maxPeerBlockHeight
   * @return maxPeerBlockHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1262196", value = "")

  public String getMaxPeerBlockHeight() {
    return maxPeerBlockHeight;
  }


  public void setMaxPeerBlockHeight(String maxPeerBlockHeight) {
    this.maxPeerBlockHeight = maxPeerBlockHeight;
  }


  public SyncInfo catchingUp(Boolean catchingUp) {
    
    this.catchingUp = catchingUp;
    return this;
  }

   /**
   * Get catchingUp
   * @return catchingUp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getCatchingUp() {
    return catchingUp;
  }


  public void setCatchingUp(Boolean catchingUp) {
    this.catchingUp = catchingUp;
  }


  public SyncInfo totalSyncedTime(String totalSyncedTime) {
    
    this.totalSyncedTime = totalSyncedTime;
    return this;
  }

   /**
   * Get totalSyncedTime
   * @return totalSyncedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000000000", value = "")

  public String getTotalSyncedTime() {
    return totalSyncedTime;
  }


  public void setTotalSyncedTime(String totalSyncedTime) {
    this.totalSyncedTime = totalSyncedTime;
  }


  public SyncInfo remainingTime(String remainingTime) {
    
    this.remainingTime = remainingTime;
    return this;
  }

   /**
   * Get remainingTime
   * @return remainingTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public String getRemainingTime() {
    return remainingTime;
  }


  public void setRemainingTime(String remainingTime) {
    this.remainingTime = remainingTime;
  }


  public SyncInfo totalSnapshots(String totalSnapshots) {
    
    this.totalSnapshots = totalSnapshots;
    return this;
  }

   /**
   * Get totalSnapshots
   * @return totalSnapshots
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")

  public String getTotalSnapshots() {
    return totalSnapshots;
  }


  public void setTotalSnapshots(String totalSnapshots) {
    this.totalSnapshots = totalSnapshots;
  }


  public SyncInfo chunkProcessAvgTime(String chunkProcessAvgTime) {
    
    this.chunkProcessAvgTime = chunkProcessAvgTime;
    return this;
  }

   /**
   * Get chunkProcessAvgTime
   * @return chunkProcessAvgTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000000000", value = "")

  public String getChunkProcessAvgTime() {
    return chunkProcessAvgTime;
  }


  public void setChunkProcessAvgTime(String chunkProcessAvgTime) {
    this.chunkProcessAvgTime = chunkProcessAvgTime;
  }


  public SyncInfo snapshotHeight(String snapshotHeight) {
    
    this.snapshotHeight = snapshotHeight;
    return this;
  }

   /**
   * Get snapshotHeight
   * @return snapshotHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1262196", value = "")

  public String getSnapshotHeight() {
    return snapshotHeight;
  }


  public void setSnapshotHeight(String snapshotHeight) {
    this.snapshotHeight = snapshotHeight;
  }


  public SyncInfo snapshotChunksCount(String snapshotChunksCount) {
    
    this.snapshotChunksCount = snapshotChunksCount;
    return this;
  }

   /**
   * Get snapshotChunksCount
   * @return snapshotChunksCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")

  public String getSnapshotChunksCount() {
    return snapshotChunksCount;
  }


  public void setSnapshotChunksCount(String snapshotChunksCount) {
    this.snapshotChunksCount = snapshotChunksCount;
  }


  public SyncInfo snapshotChunksTotal(String snapshotChunksTotal) {
    
    this.snapshotChunksTotal = snapshotChunksTotal;
    return this;
  }

   /**
   * Get snapshotChunksTotal
   * @return snapshotChunksTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "")

  public String getSnapshotChunksTotal() {
    return snapshotChunksTotal;
  }


  public void setSnapshotChunksTotal(String snapshotChunksTotal) {
    this.snapshotChunksTotal = snapshotChunksTotal;
  }


  public SyncInfo backfilledBlocks(String backfilledBlocks) {
    
    this.backfilledBlocks = backfilledBlocks;
    return this;
  }

   /**
   * Get backfilledBlocks
   * @return backfilledBlocks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")

  public String getBackfilledBlocks() {
    return backfilledBlocks;
  }


  public void setBackfilledBlocks(String backfilledBlocks) {
    this.backfilledBlocks = backfilledBlocks;
  }


  public SyncInfo backfillBlocksTotal(String backfillBlocksTotal) {
    
    this.backfillBlocksTotal = backfillBlocksTotal;
    return this;
  }

   /**
   * Get backfillBlocksTotal
   * @return backfillBlocksTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100", value = "")

  public String getBackfillBlocksTotal() {
    return backfillBlocksTotal;
  }


  public void setBackfillBlocksTotal(String backfillBlocksTotal) {
    this.backfillBlocksTotal = backfillBlocksTotal;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyncInfo syncInfo = (SyncInfo) o;
    return Objects.equals(this.latestBlockHash, syncInfo.latestBlockHash) &&
        Objects.equals(this.latestAppHash, syncInfo.latestAppHash) &&
        Objects.equals(this.latestBlockHeight, syncInfo.latestBlockHeight) &&
        Objects.equals(this.latestBlockTime, syncInfo.latestBlockTime) &&
        Objects.equals(this.earliestBlockHash, syncInfo.earliestBlockHash) &&
        Objects.equals(this.earliestAppHash, syncInfo.earliestAppHash) &&
        Objects.equals(this.earliestBlockHeight, syncInfo.earliestBlockHeight) &&
        Objects.equals(this.earliestBlockTime, syncInfo.earliestBlockTime) &&
        Objects.equals(this.maxPeerBlockHeight, syncInfo.maxPeerBlockHeight) &&
        Objects.equals(this.catchingUp, syncInfo.catchingUp) &&
        Objects.equals(this.totalSyncedTime, syncInfo.totalSyncedTime) &&
        Objects.equals(this.remainingTime, syncInfo.remainingTime) &&
        Objects.equals(this.totalSnapshots, syncInfo.totalSnapshots) &&
        Objects.equals(this.chunkProcessAvgTime, syncInfo.chunkProcessAvgTime) &&
        Objects.equals(this.snapshotHeight, syncInfo.snapshotHeight) &&
        Objects.equals(this.snapshotChunksCount, syncInfo.snapshotChunksCount) &&
        Objects.equals(this.snapshotChunksTotal, syncInfo.snapshotChunksTotal) &&
        Objects.equals(this.backfilledBlocks, syncInfo.backfilledBlocks) &&
        Objects.equals(this.backfillBlocksTotal, syncInfo.backfillBlocksTotal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latestBlockHash, latestAppHash, latestBlockHeight, latestBlockTime, earliestBlockHash, earliestAppHash, earliestBlockHeight, earliestBlockTime, maxPeerBlockHeight, catchingUp, totalSyncedTime, remainingTime, totalSnapshots, chunkProcessAvgTime, snapshotHeight, snapshotChunksCount, snapshotChunksTotal, backfilledBlocks, backfillBlocksTotal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyncInfo {\n");
    sb.append("    latestBlockHash: ").append(toIndentedString(latestBlockHash)).append("\n");
    sb.append("    latestAppHash: ").append(toIndentedString(latestAppHash)).append("\n");
    sb.append("    latestBlockHeight: ").append(toIndentedString(latestBlockHeight)).append("\n");
    sb.append("    latestBlockTime: ").append(toIndentedString(latestBlockTime)).append("\n");
    sb.append("    earliestBlockHash: ").append(toIndentedString(earliestBlockHash)).append("\n");
    sb.append("    earliestAppHash: ").append(toIndentedString(earliestAppHash)).append("\n");
    sb.append("    earliestBlockHeight: ").append(toIndentedString(earliestBlockHeight)).append("\n");
    sb.append("    earliestBlockTime: ").append(toIndentedString(earliestBlockTime)).append("\n");
    sb.append("    maxPeerBlockHeight: ").append(toIndentedString(maxPeerBlockHeight)).append("\n");
    sb.append("    catchingUp: ").append(toIndentedString(catchingUp)).append("\n");
    sb.append("    totalSyncedTime: ").append(toIndentedString(totalSyncedTime)).append("\n");
    sb.append("    remainingTime: ").append(toIndentedString(remainingTime)).append("\n");
    sb.append("    totalSnapshots: ").append(toIndentedString(totalSnapshots)).append("\n");
    sb.append("    chunkProcessAvgTime: ").append(toIndentedString(chunkProcessAvgTime)).append("\n");
    sb.append("    snapshotHeight: ").append(toIndentedString(snapshotHeight)).append("\n");
    sb.append("    snapshotChunksCount: ").append(toIndentedString(snapshotChunksCount)).append("\n");
    sb.append("    snapshotChunksTotal: ").append(toIndentedString(snapshotChunksTotal)).append("\n");
    sb.append("    backfilledBlocks: ").append(toIndentedString(backfilledBlocks)).append("\n");
    sb.append("    backfillBlocksTotal: ").append(toIndentedString(backfillBlocksTotal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

