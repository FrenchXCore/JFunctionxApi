// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/bank/v1beta1/query.proto

package cosmos.bank.v1beta1;

public interface QueryDenomsMetadataResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:cosmos.bank.v1beta1.QueryDenomsMetadataResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * metadata provides the client information for all the registered tokens.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata metadatas = 1 [(.gogoproto.nullable) = false];</code>
   */
  java.util.List<cosmos.bank.v1beta1.Bank.Metadata> 
      getMetadatasList();
  /**
   * <pre>
   * metadata provides the client information for all the registered tokens.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata metadatas = 1 [(.gogoproto.nullable) = false];</code>
   */
  cosmos.bank.v1beta1.Bank.Metadata getMetadatas(int index);
  /**
   * <pre>
   * metadata provides the client information for all the registered tokens.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata metadatas = 1 [(.gogoproto.nullable) = false];</code>
   */
  int getMetadatasCount();
  /**
   * <pre>
   * metadata provides the client information for all the registered tokens.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata metadatas = 1 [(.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends cosmos.bank.v1beta1.Bank.MetadataOrBuilder> 
      getMetadatasOrBuilderList();
  /**
   * <pre>
   * metadata provides the client information for all the registered tokens.
   * </pre>
   *
   * <code>repeated .cosmos.bank.v1beta1.Metadata metadatas = 1 [(.gogoproto.nullable) = false];</code>
   */
  cosmos.bank.v1beta1.Bank.MetadataOrBuilder getMetadatasOrBuilder(
      int index);

  /**
   * <pre>
   * pagination defines the pagination in the response.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2;</code>
   * @return Whether the pagination field is set.
   */
  boolean hasPagination();
  /**
   * <pre>
   * pagination defines the pagination in the response.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2;</code>
   * @return The pagination.
   */
  cosmos.base.query.v1beta1.Pagination.PageResponse getPagination();
  /**
   * <pre>
   * pagination defines the pagination in the response.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2;</code>
   */
  cosmos.base.query.v1beta1.Pagination.PageResponseOrBuilder getPaginationOrBuilder();
}
