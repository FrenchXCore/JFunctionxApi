syntax = "proto3";
package fx.migrate.v1;

option go_package = "github.com/functionx/fx-core/x/migrate/types";

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "fx/migrate/v1/migrate.proto";

// Query provides defines the gRPC querier service.
service Query {
  // DenomTrace queries a denomination trace information.
  rpc MigrateRecord(QueryMigrateRecordRequest) returns (QueryMigrateRecordResponse) {
    option (google.api.http).get = "/fx/migrate/v1/record/{address}";
  }

  rpc MigrateCheckAccount(QueryMigrateCheckAccountRequest) returns (QueryMigrateCheckAccountResponse) {
    option (google.api.http).get = "/fx/migrate/v1/check/account";
  }
}

message QueryMigrateRecordRequest {string address = 1;}

message QueryMigrateRecordResponse {
  // has migrate true-> migrated, false-> not migrated.
  bool found = 1;
  // migrateRecord defines the the migrate record.
  MigrateRecord migrateRecord = 2 [(gogoproto.nullable) = false];
}

message QueryMigrateCheckAccountRequest {
  // migrate from address
  string from = 1;
  // migrate to address
  string to = 2;
}

message QueryMigrateCheckAccountResponse {}