syntax = "proto3";
package fx.gravity.v1;

import "gogoproto/gogo.proto";
import "fx/gravity/v1/types.proto";
import "fx/gravity/v1/tx.proto";
import "fx/gravity/v1/batch.proto";
import "fx/gravity/v1/attestation.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/functionx/fx-core/x/gravity/types";

// Params represent the Gravity genesis and store parameters
// gravity_id:
// a random 32 byte value to prevent signature reuse, for example if the
// cosmos validators decided to use the same Ethereum keys for another chain
// also running Gravity we would not want it to be possible to play a deposit
// from chain A back on chain B's Gravity. This value IS USED ON ETHEREUM so
// it must be set in your genesis.json before launch and not changed after
// deploying Gravity
//
// contract_hash:
// the code hash of a known good version of the Gravity contract
// solidity code. This can be used to verify the correct version
// of the contract has been deployed. This is a reference value for
// goernance action only it is never read by any Gravity code
//
// bridge_eth_address:
// is address of the bridge contract on the Ethereum side, this is a
// reference value for governance only and is not actually used by any
// Gravity code
//
// bridge_chain_id:
// the unique identifier of the Ethereum chain, this is a reference value
// only and is not actually used by any Gravity code
//
// These reference values may be used by future Gravity client implemetnations
// to allow for saftey features or convenience features like the Gravity address
// in your relayer. A relayer would require a configured Gravity address if
// governance had not set the address on the chain it was relaying for.
//
// signed_valsets_window
// signed_batches_window
// signed_claims_window
//
// These values represent the time in blocks that a validator has to submit
// a signature for a batch or valset, or to submit a claim for a particular
// attestation nonce. In the case of attestations this clock starts when the
// attestation is created, but only allows for slashing once the event has
// passed
//
// target_batch_timeout:
//
// This is the 'target' value for when batches time out, this is a target
// becuase Ethereum is a probabalistic chain and you can't say for sure what the
// block frequency is ahead of time.
//
// average_block_time
// average_eth_block_time
//
// These values are the average Cosmos block time and Ethereum block time
// repsectively and they are used to copute what the target batch timeout is. It
// is important that governance updates these in case of any major, prolonged
// change in the time it takes to produce a block
//
// slash_fraction_valset
// slash_fraction_batch
// slash_fraction_claim
// slash_fraction_conflicting_claim
//
// The slashing fractions for the various gravity related slashing conditions.
// The first three refer to not submitting a particular message, the third for
// submitting a different claim for the same Ethereum event

// valset_update_power_change_percent
//
// If power change between validators of CurrentValset and latest valset request
// is > 10%
message Params {
  option (gogoproto.stringer) = false;

  string gravity_id = 1;
  string contract_source_hash = 2;
  string bridge_eth_address = 4;
  uint64 bridge_chain_id = 5;
  uint64 signed_valsets_window = 6;
  uint64 signed_batches_window = 7;
  uint64 signed_claims_window = 8;
  uint64 target_batch_timeout = 10;
  uint64 average_block_time = 11;
  uint64 average_eth_block_time = 12;
  bytes slash_fraction_valset = 13 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  bytes slash_fraction_batch = 14 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  bytes slash_fraction_claim = 15 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  bytes slash_fraction_conflicting_claim = 16 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  uint64 unbond_slashing_valsets_window = 17;
  uint64 ibc_transfer_timeout_height = 18;
  bytes valset_update_power_change_percent = 19 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// GenesisState struct
message GenesisState {
  Params params = 1 [ (gogoproto.nullable) = false ];
  uint64 last_observed_nonce = 2;
  LastObservedEthereumBlockHeight last_observed_block_height = 3;
  repeated MsgSetOrchestratorAddress delegate_keys = 4
      [ (gogoproto.nullable) = false ];
  repeated Valset valsets = 5 [ (gogoproto.nullable) = false ];
  repeated ERC20ToDenom erc20_to_denoms = 6 [ (gogoproto.nullable) = false ];
  repeated OutgoingTransferTx unbatched_transfers = 7
      [ (gogoproto.nullable) = false ];
  repeated OutgoingTxBatch batches = 8 [ (gogoproto.nullable) = false ];
  repeated MsgConfirmBatch batch_confirms = 9 [ (gogoproto.nullable) = false ];
  repeated MsgValsetConfirm valset_confirms = 10
      [ (gogoproto.nullable) = false ];
  repeated Attestation attestations = 11 [ (gogoproto.nullable) = false ];
}
